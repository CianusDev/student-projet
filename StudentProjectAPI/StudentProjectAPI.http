@StudentProjectAPI_HostAddress = http://localhost:5011

### Inscription d'un nouvel utilisateur
POST {{StudentProjectAPI_HostAddress}}/api/auth/register
Content-Type: application/json
Accept: application/json

{
    "email": "test@example.com",
    "password": "Test123!",
    "firstName": "Test", 
    "lastName": "User",
    "role": "Student"
}

### Connexion d'un utilisateur
POST {{StudentProjectAPI_HostAddress}}/api/auth/login
Content-Type: application/json
Accept: application/json

{
    "email": "prof@example.com",
    "password": "Test123!"
}

### Changement de mot de passe (nécessite un token JWT)
POST {{StudentProjectAPI_HostAddress}}/api/auth/change-password
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{auth_token}}

{
    "currentPassword": "Test123!",
    "newPassword": "NewTest123!",
    "confirmPassword": "NewTest123!"
}

### Obtenir tous les utilisateurs (nécessite un token JWT)
GET {{StudentProjectAPI_HostAddress}}/api/user
Authorization: Bearer {{auth_token}}
Accept: application/json

### Obtenir un utilisateur par ID (nécessite un token JWT)
GET {{StudentProjectAPI_HostAddress}}/api/user/1
Authorization: Bearer {{auth_token}}
Accept: application/json

### Mettre à jour un utilisateur (nécessite un token JWT)
PUT {{StudentProjectAPI_HostAddress}}/api/user/1
Authorization: Bearer {{auth_token}}
Content-Type: application/json
Accept: application/json

{
    "firstName": "John",
    "lastName": "Doe",
    "email": "john.doe@example.com"
}

### Supprimer un utilisateur (nécessite un token JWT)
DELETE {{StudentProjectAPI_HostAddress}}/api/user/1
Authorization: Bearer {{auth_token}}
Accept: application/json

### Obtenir les statistiques des utilisateurs (nécessite un token JWT)
GET {{StudentProjectAPI_HostAddress}}/api/user/stats
Authorization: Bearer {{auth_token}}
Accept: application/json

### Obtenir tous les projets (nécessite un token JWT)
GET {{StudentProjectAPI_HostAddress}}/api/projects
Authorization: Bearer {{auth_token}}
Accept: application/json

### Obtenir un projet par ID (nécessite un token JWT)
GET {{StudentProjectAPI_HostAddress}}/api/projects/1
Authorization: Bearer {{auth_token}}
Accept: application/json

### Créer un nouveau projet (nécessite un token JWT de Teacher)
POST {{StudentProjectAPI_HostAddress}}/api/projects
Authorization: Bearer {{auth_token}}
Content-Type: application/json
Accept: application/json

{
    "title": "Projet Web - E-commerce",
    "description": "Développer une application e-commerce complète avec les fonctionnalités suivantes :\n- Catalogue de produits\n- Panier d'achat\n- Système de paiement\n- Gestion des commandes",
    "dueDate": "2025-07-15T00:00:00Z",
    "maxPoints": 100,
    "isGroupProject": true,
    "maxGroupSize": 3
}

### Mettre à jour un projet (nécessite un token JWT de Teacher)
PUT {{StudentProjectAPI_HostAddress}}/api/projects/1
Authorization: Bearer {{auth_token}}
Content-Type: application/json
Accept: application/json

{
    "title": "Projet Web - E-commerce (Mise à jour)",
    "description": "Développer une application e-commerce complète avec paiement en ligne et système de recommandation",
    "dueDate": "2025-07-20T00:00:00Z",
    "maxPoints": 120,
    "isGroupProject": true,
    "maxGroupSize": 4
}

### Supprimer un projet (nécessite un token JWT de Teacher)
DELETE {{StudentProjectAPI_HostAddress}}/api/projects/1
Authorization: Bearer {{auth_token}}
Accept: application/json

### Obtenir tous les groupes (nécessite un token JWT)
GET {{StudentProjectAPI_HostAddress}}/api/group
Authorization: Bearer {{auth_token}}
Accept: application/json

### Obtenir un groupe par ID (nécessite un token JWT)
GET {{StudentProjectAPI_HostAddress}}/api/group/1
Authorization: Bearer {{auth_token}}
Accept: application/json

### Créer un nouveau groupe (nécessite un token JWT)
POST {{StudentProjectAPI_HostAddress}}/api/group
Authorization: Bearer {{auth_token}}
Content-Type: application/json
Accept: application/json

{
    "projectId": 1,
    "groupName": "Groupe Alpha",
    "memberIds": [1, 2, 3],
    "leaderId": 1
}

### Mettre à jour un groupe (nécessite un token JWT)
PUT {{StudentProjectAPI_HostAddress}}/api/group/1
Authorization: Bearer {{auth_token}}
Content-Type: application/json
Accept: application/json

{
    "groupName": "Groupe Alpha (Mise à jour)",
    "leaderId": 2
}

### Supprimer un groupe (nécessite un token JWT)
DELETE {{StudentProjectAPI_HostAddress}}/api/group/1
Authorization: Bearer {{auth_token}}
Accept: application/json

### Ajouter un membre à un groupe (nécessite un token JWT)
POST {{StudentProjectAPI_HostAddress}}/api/group/1/members
Authorization: Bearer {{auth_token}}
Content-Type: application/json
Accept: application/json

{
    "studentId": 4,
    "isLeader": false
}

### Supprimer un membre d'un groupe (nécessite un token JWT)
DELETE {{StudentProjectAPI_HostAddress}}/api/group/1/members/4
Authorization: Bearer {{auth_token}}
Accept: application/json

### Obtenir les groupes d'un étudiant (nécessite un token JWT)
GET {{StudentProjectAPI_HostAddress}}/api/group/student/1
Authorization: Bearer {{auth_token}}
Accept: application/json

### Variables d'environnement
@auth_token = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1laWRlbnRpZmllciI6IjYiLCJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9lbWFpbGFkZHJlc3MiOiJwcm9mQGV4YW1wbGUuY29tIiwiaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS93cy8yMDA4LzA2L2lkZW50aXR5L2NsYWltcy9yb2xlIjoiVGVhY2hlciIsImV4cCI6MTc1MDEwMTMzNCwiaXNzIjoiU3R1ZGVudFByb2plY3RBUEkiLCJhdWQiOiJTdHVkZW50UHJvamVjdENsaWVudCJ9.ch15exWNIEzkiclC_7Ae0Fyu7XPUrmRBqlFGOCgcsk4

### Exemples de réponses

### Réponse de création de projet
# {
#     "id": 1,
#     "title": "Projet Web - E-commerce",
#     "description": "Développer une application e-commerce complète...",
#     "createdAt": "2024-03-15T10:30:00Z",
#     "dueDate": "2025-07-15T00:00:00Z",
#     "maxPoints": 100,
#     "isGroupProject": true,
#     "maxGroupSize": 3,
#     "createdBy": "John Doe",
#     "status": "Active"
# }

### Réponse de création de groupe
# {
#     "id": 1,
#     "projectId": 1,
#     "projectTitle": "Projet Web - E-commerce",
#     "groupName": "Groupe Alpha",
#     "createdAt": "2024-03-15T10:30:00Z",
#     "members": [
#         {
#             "id": 1,
#             "groupId": 1,
#             "studentId": 1,
#             "student": {
#                 "id": 1,
#                 "email": "student1@example.com",
#                 "firstName": "John",
#                 "lastName": "Doe",
#                 "role": "Student"
#             },
#             "isLeader": true,
#             "joinedAt": "2024-03-15T10:30:00Z"
#         }
#     ]
# }

### Réponse de groupe d'étudiant
# {
#     "groupId": 1,
#     "groupName": "Groupe Alpha",
#     "projectId": 1,
#     "projectTitle": "Projet Web - E-commerce",
#     "isLeader": true,
#     "joinedAt": "2024-03-15T10:30:00Z",
#     "memberCount": 3
# }

### Réponse d'erreur d'autorisation
# {
#     "status": 401,
#     "message": "Non autorisé"
# }

### Réponse de groupe non trouvé
# {
#     "status": 404,
#     "message": "Groupe non trouvé"
# }

### Réponse de statistiques utilisateurs
# {
#     "totalUsers": 50,
#     "activeUsers": 45,
#     "teachers": 10,
#     "students": 40
# }

### Assignations de Projets

### Récupérer toutes les assignations
# @name getAllAssignments
GET {{StudentProjectAPI_HostAddress}}/api/assignment
Authorization: Bearer {{auth_token}}
Accept: application/json

### Réponse de liste d'assignations
# [
#     {
#         "id": 1,
#         "projectTitle": "Projet Web - E-commerce",
#         "studentName": "John Doe",
#         "groupName": "Groupe Alpha",
#         "status": "Assigned",
#         "assignedAt": "2024-03-15T10:30:00Z"
#     }
# ]

### Récupérer une assignation spécifique
# @name getAssignment
GET {{StudentProjectAPI_HostAddress}}/api/assignment/1
Authorization: Bearer {{auth_token}}
Accept: application/json

### Réponse d'assignation spécifique
# {
#     "id": 1,
#     "projectId": 1,
#     "project": {
#         "id": 1,
#         "title": "Projet Web - E-commerce",
#         "description": "Développer une application e-commerce complète...",
#         "createdAt": "2024-03-15T10:30:00Z",
#         "dueDate": "2025-07-15T00:00:00Z",
#         "maxPoints": 100,
#         "isGroupProject": true,
#         "maxGroupSize": 3
#     },
#     "studentId": 1,
#     "student": {
#         "id": 1,
#         "email": "student1@example.com",
#         "firstName": "John",
#         "lastName": "Doe",
#         "role": "Student",
#         "createdAt": "2024-03-15T10:30:00Z"
#     },
#     "groupId": 1,
#     "group": {
#         "id": 1,
#         "projectId": 1,
#         "projectTitle": "Projet Web - E-commerce",
#         "groupName": "Groupe Alpha",
#         "createdAt": "2024-03-15T10:30:00Z",
#         "members": [
#             {
#                 "id": 1,
#                 "groupId": 1,
#                 "studentId": 1,
#                 "student": {
#                     "id": 1,
#                     "email": "student1@example.com",
#                     "firstName": "John",
#                     "lastName": "Doe",
#                     "role": "Student",
#                     "createdAt": "2024-03-15T10:30:00Z"
#                 },
#                 "isLeader": true,
#                 "joinedAt": "2024-03-15T10:30:00Z"
#             }
#         ]
#     },
#     "status": "Assigned",
#     "assignedAt": "2024-03-15T10:30:00Z",
#     "lastSubmissionDate": null,
#     "submissionCount": 0,
#     "evaluationCount": 0
# }

### Récupérer les assignations d'un étudiant
# @name getStudentAssignments
GET {{StudentProjectAPI_HostAddress}}/api/assignment/student/1
Authorization: Bearer {{auth_token}}
Accept: application/json

### Réponse des assignations d'un étudiant
# [
#     {
#         "id": 1,
#         "projectTitle": "Projet Web - E-commerce",
#         "studentName": "John Doe",
#         "groupName": "Groupe Alpha",
#         "status": "Assigned",
#         "assignedAt": "2024-03-15T10:30:00Z"
#     }
# ]

### Récupérer les assignations d'un groupe
# @name getGroupAssignments
GET {{StudentProjectAPI_HostAddress}}/api/assignment/group/1
Authorization: Bearer {{auth_token}}
Accept: application/json

### Réponse des assignations d'un groupe
# [
#     {
#         "id": 1,
#         "projectTitle": "Projet Web - E-commerce",
#         "studentName": "John Doe",
#         "groupName": "Groupe Alpha",
#         "status": "Assigned",
#         "assignedAt": "2024-03-15T10:30:00Z"
#     }
# ]

### Créer une nouvelle assignation (Enseignants uniquement)
# @name createAssignment
POST {{StudentProjectAPI_HostAddress}}/api/assignment
Authorization: Bearer {{auth_token}}
Content-Type: application/json
Accept: application/json

# Exemple 1: Assignation à un étudiant individuel
{
    "projectId": 1,
    "studentId": 1
}

# Exemple 2: Assignation à un groupe
{
    "projectId": 1,
    "groupId": 1
}

# Exemple 3: Assignation à un étudiant dans un groupe
{
    "projectId": 1,
    "studentId": 1,
    "groupId": 1
}

### Réponse de création d'assignation
# {
#     "id": 1,
#     "projectId": 1,
#     "projectTitle": "Projet Web - E-commerce",
#     "studentId": 1,
#     "studentName": "John Doe",
#     "groupId": 1,
#     "groupName": "Groupe Alpha",
#     "status": "Assigned",
#     "assignedAt": "2024-03-15T10:30:00Z"
# }

### Réponse d'erreur de validation
# {
#     "status": 400,
#     "message": "Données invalides",
#     "errors": {
#         "projectId": ["L'ID du projet est requis"],
#         "studentId": ["Au moins un étudiant ou un groupe doit être spécifié"],
#         "groupId": ["Au moins un étudiant ou un groupe doit être spécifié"]
#     }
# }

### Mettre à jour le statut d'une assignation
# @name updateAssignmentStatus
PUT {{StudentProjectAPI_HostAddress}}/api/assignment/1/status
Authorization: Bearer {{auth_token}}
Content-Type: application/json
Accept: application/json

{
    "status": "InProgress"
}

### Réponse de mise à jour du statut
# {
#     "id": 1,
#     "status": "InProgress",
#     "lastSubmissionDate": "2024-03-16T15:45:00Z",
#     "submissionCount": 2,
#     "evaluationCount": 1
# }

### Supprimer une assignation (Enseignants uniquement)
# @name deleteAssignment
DELETE {{StudentProjectAPI_HostAddress}}/api/assignment/1
Authorization: Bearer {{auth_token}}
Accept: application/json

### Réponses d'erreur

### Réponse d'assignation non trouvée
# {
#     "status": 404,
#     "message": "Assignation non trouvée"
# }

### Réponse d'erreur d'autorisation
# {
#     "status": 401,
#     "message": "Non autorisé"
# }

### Réponse d'erreur de validation
# {
#     "status": 400,
#     "message": "Données invalides",
#     "errors": {
#         "projectId": ["L'ID du projet est requis"],
#         "status": ["Le statut doit être l'un des suivants : Assigned, InProgress, Submitted, Graded"]
#     }
# }
